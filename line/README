A direct-to-screen line draw and test for MSX by Antti Silvast, 2012.

Compiling:
- Type make at the command line. 

An implementation of the Bresenham line algorithm (http://en.wikipedia.org/wiki/Bresenham's_line_algorithm). All the calculations are done in the Z80 registers. Relatively fast and grants a lot of flexibility over where the lines can be (as opposed to drawing to an off-screen buffer).

Issues and limitations: 

- Due to the calculation of the Bresenham error term in an 8-bit register, the lines can only be around 64 pixels wide/high. Obviously, longer lines will be necessary in many cases. One idea here is to calculate the error term (2*err in the Wikipedia link) into a 16-bit register while everything else (dx and dy, absolute values range 0...255) can be kept in 8-bit registers. 

- On an MSX, screen erasing is a major efficiency factor and is not optimized here. As the shapes only figure on restricted regions, the screen erasing should clear only these parts as well. 

- The clipping of the line coordinates is not implemented. Maybe this clipping could use a delta calculation: that is to say, it would increase or decrease the line's x and y coordinates according to the deltas of the line so that the visible part of the line is always drawn.  
